version: '3.8'

services:
  # PostgreSQL 数据库 - hydra-demo 命名空间
  postgres:
    image: postgres:13
    container_name: hydra-postgres
    environment:
      POSTGRES_DB: hydra
      POSTGRES_USER: hydra
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hydra-shared-network
    restart: unless-stopped

  # Ory Hydra 服务 - 使用共享网络
  hydra:
    image: oryd/hydra:v1.11.8
    container_name: hydra-server
    command: serve all --dangerous-force-http -c /etc/config/hydra/hydra.yml
    environment:
      # 禁用 CSRF 保护用于开发环境
      - SERVE_COOKIES_SAME_SITE_MODE=None
      - SERVE_COOKIES_SECURE=false
      # 额外的 cookie 和 CSRF 配置
      - SERVE_COOKIES_DOMAIN=
      - SERVE_COOKIES_PATH=/
      # Session 配置
      - SERVE_COOKIES_SAME_SITE_LEGACY_WORKAROUND=true
      # 允许不安全的重定向（开发环境）
      - OAUTH2_EXPOSE_INTERNAL_ERRORS=true
      # CORS 配置
      - SERVE_PUBLIC_CORS_ENABLED=true
      - SERVE_PUBLIC_CORS_ALLOWED_ORIGINS=*
      - SERVE_ADMIN_CORS_ENABLED=true
      - SERVE_ADMIN_CORS_ALLOWED_ORIGINS=*
      # 开发环境设置
      - DEV_MODE=true
    depends_on:
      - postgres
    volumes:
      - ./hydra.yml:/etc/config/hydra/hydra.yml
    networks:
      - hydra-shared-network
    ports:
      - "4444:4444"  # Public API
      - "4445:4445"  # Admin API
    restart: unless-stopped

  # Hydra 数据库迁移
  hydra-migrate:
    image: oryd/hydra:v1.11.8
    container_name: hydra-migrate
    environment:
      - DSN=postgres://hydra:secret@postgres:5432/hydra?sslmode=disable
    command: migrate sql -e --yes
    depends_on:
      - postgres
    networks:
      - hydra-shared-network
    restart: "no"

  # Hydra 客户端初始化
  hydra-client-init:
    image: alpine/curl:latest
    container_name: hydra-client-init
    depends_on:
      - hydra
    networks:
      - hydra-shared-network
    restart: "no"
    command: >
      sh -c "
        echo 'Waiting for Hydra to be ready...';
        while ! curl -f http://hydra:4445/health/ready; do
          echo 'Waiting for Hydra...';
          sleep 5;
        done;
        echo 'Hydra is ready, creating demo-client...';
        curl -X DELETE http://hydra:4445/clients/demo-client || true;
        curl -X POST http://hydra:4445/clients -H 'Content-Type: application/json' -d '{\"client_id\":\"demo-client\",\"client_name\":\"Demo Client Application\",\"client_secret\":\"demo-secret\",\"redirect_uris\":[\"http://localhost:5555/callback\"],\"response_types\":[\"code\",\"id_token\"],\"grant_types\":[\"authorization_code\",\"refresh_token\"],\"scope\":\"openid offline profile email\",\"token_endpoint_auth_method\":\"client_secret_basic\"}';
        echo 'Demo client created successfully!';
      "

volumes:
  postgres_data:

networks:
  # 内部创建的共享网络
  hydra-shared-network:
    driver: bridge
    name: hydra-shared-network 